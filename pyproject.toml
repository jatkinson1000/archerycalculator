[build-system]
requires = ["setuptools >= 73"]
build-backend = "setuptools.build_meta"

[project]
name = "archerycalculator"
version = "0.2.0"
description = "A flask web app to perform archery calculations"
authors = [
  { name="Jack Atkinson", email="jack.atkinson1000@gmail.com" },
]
readme = "README.md"
license = {file = "LICENSE"}
requires-python = ">=3.10"
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Natural Language :: English",
    "Development Status :: 3 - Alpha",
]
dependencies = [
    "archeryutils>=2.0.0",
    "Flask>=2.2.2",
    "wtforms>=3.0.1",
    "flask-sitemap>=0.4.0"
]

[project.optional-dependencies]
test = [
    "pytest",
]
lint = [
    "mypy>=1.0.0",
    "ruff>=0.7.3",
]

[project.urls]
"Homepage" = "https://github.com/jatkinson1000/archerycalculator"
"Bug Tracker" = "https://github.com/jatkinson1000/archerycalculator/Issues"

[tool.setuptools]
# By default, include-package-data is true in pyproject.toml, so you do
# NOT have to specify this line.
include-package-data = true

[tool.setuptools.package-data]
mypkg = ["* = *.json",]

[tool.setuptools.packages]
find = {}
#[tool.setuptools.packages.find]
#where = ["archerycalculator"]  # list of folders that contain the packages (["."] by default)
#include = ["archerycalculator*"]  # package names should match these glob patterns (["*"] by default)
#exclude = ["archerycalculator.tests*"]  # exclude packages matching these glob patterns (empty by default)
#namespaces = false  # to disable scanning PEP 420 namespaces (true by default)

[tool.ruff]
# Run linting and formatting on notebooks
extend-include = ["*.ipynb"]

[tool.ruff.format]
docstring-code-format = true

[tool.ruff.lint]
# See https://docs.astral.sh/ruff/rules for full details of each ruleset.

# Enable:  D: `pydocstyle`, PL: `pylint`, I: `isort`, W: `pycodestyle whitespace`
#          NPY: `numpy`, FLY: `flynt`, RUF: `ruff`
#          From flake8: "ARG", "SLF", "S", "BLE", "B", "A", "C4", "EM", "ICN",
#                       "PIE", "Q", "RSE", "SIM", "TID"
select = ["D", "PL", "I", "E", "W", "NPY", "FLY", "RUF",
          "ARG", "SLF", "S", "BLE","B", "A", "C4", "EM", "ICN", "PIE", "Q", "RSE",
          "SIM", "TID"]

# Enable D417 (Missing argument description) on top of the NumPy convention.
extend-select = ["D417"]

# Ignore SIM108 (use ternary instead of if-else) as I think it can obscure intent.
# Ignore RUF002 (ambiguous characters) as it does not allow apostrophes in strings.
ignore = ["SIM108", "RUF002"]

[tool.ruff.lint.pydocstyle]
# Use NumPy convention for checking docstrings
convention = "numpy"

[tool.ruff.lint.per-file-ignores]
# Ignore S101 (use of assert) in tests
# Ignore PLR2004 (magic values) in tests as we regularly want to compare to a numerical value
"**/tests/*" = ["S101", "PLR2004"]
